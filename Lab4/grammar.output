Terminals unused in grammar

   K_DO
   K_ELIF
   K_ISA
   K_CLOCK_SPEED
   K_L1_MEMORY
   K_L2_MEMORY
   K_SUBMIT_JOBS
   K_RUN
   K_DISCARD_JOB
   K_ARM
   K_AMD
   K_CDC
   K_MIPS
   K_START_POINT
   K_END_POINT
   K_BANDWIDTH
   K_CHANNEL_CAPACITY
   K_MEMORY_TYPE
   K_MEM_SIZE
   K_JOB_ID
   K_FLOPS_REQUIRED
   K_DEADLINE
   K_MEM_REQUIRED
   K_AFFINITY
   K_PROCESSORS
   K_TOPOLOGY
   K_LINK_BANDWIDTH
   K_LINK_CAPACITY
   K_NAME
   COLON
   EOFILE
   K_PRIMARY
   K_SECONDARY
   K_CACHE
   SPACE
   K_JOBS
   K_ALGO
   K_FCFS
   K_SJN
   K_SRT
   K_RRS
   K_WAIT
   K_CLUSTERS


Grammar

    0 $accept: statements $end

    1 statements: statement statements
    2           | epsilon

    3 statement: assign_statement
    4          | K_IF_EXP BLOCK_BODY K_ELSE BLOCK_BODY
    5          | K_WHILE_EXP BLOCK_BODY
    6          | K_BEGIN statements K_END
    7          | K_FOR_EXP BLOCK_BODY
    8          | ID DOT function_call_1
    9          | function_call_2
   10          | DType DList

   11 K_WHILE_EXP: K_WHILE LP bool_returning_statements RP

   12 K_IF_EXP: K_IF LP bool_returning_statements RP

   13 K_FOR_EXP: K_FOR LP assign_statements SEMI bool_returning_statements SEMI assign_statements RP

   14 BLOCK_BODY: LB statements RB

   15 DList: IDEXP COMMA DList
   16      | IDEXP

   17 IDEXP: IDEXP0
   18      | IDEXP0 BR_DIMLIST

   19 IDEXP0: ID

   20 BR_DIMLIST: DIM1
   21           | DIM1 BR_DIMLIST

   22 DIM1: LS INT RS
   23     | LS ID RS

   24 DType: K_INT
   25      | K_FLOAT
   26      | K_BOOL
   27      | K_PROCESSOR
   28      | K_LINK
   29      | K_SCHEDULER
   30      | K_MEMORY
   31      | K_CLUSTER
   32      | K_JOB

   33 function_call_1: K_IS_RUNNING LP RP
   34                | K_GET_CLOCK_SPEED LP RP
   35                | K_GET_AVAILABLE_MEMORY LP RP
   36                | K_GET_MEMORY LP RP
   37                | K_PRINT_STATS LP RP

   38 function_call_2: K_PRINT LP expression RP
   39                | K_INPUT LP ID RP

   40 bool_returning_statements: bool_returning_statement L_AND bool_returning_statements
   41                          | bool_returning_statement L_OR bool_returning_statements
   42                          | L_NOT bool_returning_statements
   43                          | bool_returning_statement

   44 bool_returning_statement: expression

   45 assign_statements: assign_statement COMMA assign_statements
   46                  | assign_statement
   47                  | epsilon

   48 assign_statement: IDEXP ASSIGN expression

   49 expression: term_prime RELOPEXP expression
   50           | term_prime

   51 RELOPEXP: RELOP

   52 term_prime: term PLUS term_prime
   53           | term MINUS term_prime
   54           | term

   55 term: factor MULT term
   56     | factor DIV term
   57     | factor

   58 factor: factor_prime

   59 factor_prime: ID DOT function_call_1
   60             | LP expression RP
   61             | INT
   62             | FLOAT
   63             | STRING
   64             | function_call_2
   65             | IDEXP

   66 epsilon: %empty


Terminals, with rules where they appear

$end (0) 0
K_IF (1) 12
K_ELSE (2) 4
K_WHILE (3) 11
K_DO (4)
K_ELIF (5)
K_FOR (6) 13
K_BEGIN (7) 6
K_END (8) 6
K_PROCESSOR (9) 27
K_ISA (10)
K_CLOCK_SPEED (11)
K_L1_MEMORY (12)
K_L2_MEMORY (13)
K_IS_RUNNING (14) 33
K_SUBMIT_JOBS (15)
K_GET_CLOCK_SPEED (16) 34
K_RUN (17)
K_DISCARD_JOB (18)
K_ARM (19)
K_AMD (20)
K_CDC (21)
K_MIPS (22)
K_LINK (23) 28
K_START_POINT (24)
K_END_POINT (25)
K_BANDWIDTH (26)
K_CHANNEL_CAPACITY (27)
K_MEMORY (28) 30
K_MEMORY_TYPE (29)
K_MEM_SIZE (30)
K_GET_AVAILABLE_MEMORY (31) 35
K_JOB (32) 32
K_JOB_ID (33)
K_FLOPS_REQUIRED (34)
K_DEADLINE (35)
K_MEM_REQUIRED (36)
K_AFFINITY (37)
K_GET_MEMORY (38) 36
K_CLUSTER (39) 31
K_PROCESSORS (40)
K_TOPOLOGY (41)
K_LINK_BANDWIDTH (42)
K_LINK_CAPACITY (43)
K_NAME (44)
ID (45) 8 19 23 39 59
INT (46) 22 61
FLOAT (47) 62
LP (48) 11 12 13 33 34 35 36 37 38 39 60
RP (49) 11 12 13 33 34 35 36 37 38 39 60
LB (50) 14
RB (51) 14
STRING (52) 63
LS (53) 22 23
RS (54) 22 23
PLUS (55) 52
MINUS (56) 53
MULT (57) 55
DIV (58) 56
RELOP (59) 51
COMMA (60) 15 45
SEMI (61) 13
COLON (62)
ASSIGN (63) 48
L_AND (64) 40
L_OR (65) 41
L_NOT (66) 42
DOT (67) 8 59
EOFILE (68)
K_PRIMARY (69)
K_SECONDARY (70)
K_CACHE (71)
SPACE (72)
K_PRINT_STATS (73) 37
K_SCHEDULER (74) 29
K_JOBS (75)
K_ALGO (76)
K_FCFS (77)
K_SJN (78)
K_SRT (79)
K_RRS (80)
K_WAIT (81)
K_CLUSTERS (82)
K_INT (83) 24
K_BOOL (84) 26
K_FLOAT (85) 25
K_PRINT (86) 38
K_INPUT (87) 39
error (256)


Nonterminals, with rules where they appear

$accept (90)
    on left: 0
statements (91)
    on left: 1 2, on right: 0 1 6 14
statement (92)
    on left: 3 4 5 6 7 8 9 10, on right: 1
K_WHILE_EXP (93)
    on left: 11, on right: 5
K_IF_EXP (94)
    on left: 12, on right: 4
K_FOR_EXP (95)
    on left: 13, on right: 7
BLOCK_BODY (96)
    on left: 14, on right: 4 5 7
DList (97)
    on left: 15 16, on right: 10 15
IDEXP (98)
    on left: 17 18, on right: 15 16 48 65
IDEXP0 (99)
    on left: 19, on right: 17 18
BR_DIMLIST (100)
    on left: 20 21, on right: 18 21
DIM1 (101)
    on left: 22 23, on right: 20 21
DType (102)
    on left: 24 25 26 27 28 29 30 31 32, on right: 10
function_call_1 (103)
    on left: 33 34 35 36 37, on right: 8 59
function_call_2 (104)
    on left: 38 39, on right: 9 64
bool_returning_statements (105)
    on left: 40 41 42 43, on right: 11 12 13 40 41 42
bool_returning_statement (106)
    on left: 44, on right: 40 41 43
assign_statements (107)
    on left: 45 46 47, on right: 13 45
assign_statement (108)
    on left: 48, on right: 3 45 46
expression (109)
    on left: 49 50, on right: 38 44 48 49 60
RELOPEXP (110)
    on left: 51, on right: 49
term_prime (111)
    on left: 52 53 54, on right: 49 50 52 53
term (112)
    on left: 55 56 57, on right: 52 53 54 55 56
factor (113)
    on left: 58, on right: 55 56 57
factor_prime (114)
    on left: 59 60 61 62 63 64 65, on right: 58
epsilon (115)
    on left: 66, on right: 2 47


State 0

    0 $accept: . statements $end

    K_IF         shift, and go to state 1
    K_WHILE      shift, and go to state 2
    K_FOR        shift, and go to state 3
    K_BEGIN      shift, and go to state 4
    K_PROCESSOR  shift, and go to state 5
    K_LINK       shift, and go to state 6
    K_MEMORY     shift, and go to state 7
    K_JOB        shift, and go to state 8
    K_CLUSTER    shift, and go to state 9
    ID           shift, and go to state 10
    K_SCHEDULER  shift, and go to state 11
    K_INT        shift, and go to state 12
    K_BOOL       shift, and go to state 13
    K_FLOAT      shift, and go to state 14
    K_PRINT      shift, and go to state 15
    K_INPUT      shift, and go to state 16

    $default  reduce using rule 66 (epsilon)

    statements        go to state 17
    statement         go to state 18
    K_WHILE_EXP       go to state 19
    K_IF_EXP          go to state 20
    K_FOR_EXP         go to state 21
    IDEXP             go to state 22
    IDEXP0            go to state 23
    DType             go to state 24
    function_call_2   go to state 25
    assign_statement  go to state 26
    epsilon           go to state 27


State 1

   12 K_IF_EXP: K_IF . LP bool_returning_statements RP

    LP  shift, and go to state 28


State 2

   11 K_WHILE_EXP: K_WHILE . LP bool_returning_statements RP

    LP  shift, and go to state 29


State 3

   13 K_FOR_EXP: K_FOR . LP assign_statements SEMI bool_returning_statements SEMI assign_statements RP

    LP  shift, and go to state 30


State 4

    6 statement: K_BEGIN . statements K_END

    K_IF         shift, and go to state 1
    K_WHILE      shift, and go to state 2
    K_FOR        shift, and go to state 3
    K_BEGIN      shift, and go to state 4
    K_PROCESSOR  shift, and go to state 5
    K_LINK       shift, and go to state 6
    K_MEMORY     shift, and go to state 7
    K_JOB        shift, and go to state 8
    K_CLUSTER    shift, and go to state 9
    ID           shift, and go to state 10
    K_SCHEDULER  shift, and go to state 11
    K_INT        shift, and go to state 12
    K_BOOL       shift, and go to state 13
    K_FLOAT      shift, and go to state 14
    K_PRINT      shift, and go to state 15
    K_INPUT      shift, and go to state 16

    $default  reduce using rule 66 (epsilon)

    statements        go to state 31
    statement         go to state 18
    K_WHILE_EXP       go to state 19
    K_IF_EXP          go to state 20
    K_FOR_EXP         go to state 21
    IDEXP             go to state 22
    IDEXP0            go to state 23
    DType             go to state 24
    function_call_2   go to state 25
    assign_statement  go to state 26
    epsilon           go to state 27


State 5

   27 DType: K_PROCESSOR .

    $default  reduce using rule 27 (DType)


State 6

   28 DType: K_LINK .

    $default  reduce using rule 28 (DType)


State 7

   30 DType: K_MEMORY .

    $default  reduce using rule 30 (DType)


State 8

   32 DType: K_JOB .

    $default  reduce using rule 32 (DType)


State 9

   31 DType: K_CLUSTER .

    $default  reduce using rule 31 (DType)


State 10

    8 statement: ID . DOT function_call_1
   19 IDEXP0: ID .

    DOT  shift, and go to state 32

    $default  reduce using rule 19 (IDEXP0)


State 11

   29 DType: K_SCHEDULER .

    $default  reduce using rule 29 (DType)


State 12

   24 DType: K_INT .

    $default  reduce using rule 24 (DType)


State 13

   26 DType: K_BOOL .

    $default  reduce using rule 26 (DType)


State 14

   25 DType: K_FLOAT .

    $default  reduce using rule 25 (DType)


State 15

   38 function_call_2: K_PRINT . LP expression RP

    LP  shift, and go to state 33


State 16

   39 function_call_2: K_INPUT . LP ID RP

    LP  shift, and go to state 34


State 17

    0 $accept: statements . $end

    $end  shift, and go to state 35


State 18

    1 statements: statement . statements

    K_IF         shift, and go to state 1
    K_WHILE      shift, and go to state 2
    K_FOR        shift, and go to state 3
    K_BEGIN      shift, and go to state 4
    K_PROCESSOR  shift, and go to state 5
    K_LINK       shift, and go to state 6
    K_MEMORY     shift, and go to state 7
    K_JOB        shift, and go to state 8
    K_CLUSTER    shift, and go to state 9
    ID           shift, and go to state 10
    K_SCHEDULER  shift, and go to state 11
    K_INT        shift, and go to state 12
    K_BOOL       shift, and go to state 13
    K_FLOAT      shift, and go to state 14
    K_PRINT      shift, and go to state 15
    K_INPUT      shift, and go to state 16

    $default  reduce using rule 66 (epsilon)

    statements        go to state 36
    statement         go to state 18
    K_WHILE_EXP       go to state 19
    K_IF_EXP          go to state 20
    K_FOR_EXP         go to state 21
    IDEXP             go to state 22
    IDEXP0            go to state 23
    DType             go to state 24
    function_call_2   go to state 25
    assign_statement  go to state 26
    epsilon           go to state 27


State 19

    5 statement: K_WHILE_EXP . BLOCK_BODY

    LB  shift, and go to state 37

    BLOCK_BODY  go to state 38


State 20

    4 statement: K_IF_EXP . BLOCK_BODY K_ELSE BLOCK_BODY

    LB  shift, and go to state 37

    BLOCK_BODY  go to state 39


State 21

    7 statement: K_FOR_EXP . BLOCK_BODY

    LB  shift, and go to state 37

    BLOCK_BODY  go to state 40


State 22

   48 assign_statement: IDEXP . ASSIGN expression

    ASSIGN  shift, and go to state 41


State 23

   17 IDEXP: IDEXP0 .
   18      | IDEXP0 . BR_DIMLIST

    LS  shift, and go to state 42

    $default  reduce using rule 17 (IDEXP)

    BR_DIMLIST  go to state 43
    DIM1        go to state 44


State 24

   10 statement: DType . DList

    ID  shift, and go to state 45

    DList   go to state 46
    IDEXP   go to state 47
    IDEXP0  go to state 23


State 25

    9 statement: function_call_2 .

    $default  reduce using rule 9 (statement)


State 26

    3 statement: assign_statement .

    $default  reduce using rule 3 (statement)


State 27

    2 statements: epsilon .

    $default  reduce using rule 2 (statements)


State 28

   12 K_IF_EXP: K_IF LP . bool_returning_statements RP

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    L_NOT    shift, and go to state 53
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP                      go to state 54
    IDEXP0                     go to state 23
    function_call_2            go to state 55
    bool_returning_statements  go to state 56
    bool_returning_statement   go to state 57
    expression                 go to state 58
    term_prime                 go to state 59
    term                       go to state 60
    factor                     go to state 61
    factor_prime               go to state 62


State 29

   11 K_WHILE_EXP: K_WHILE LP . bool_returning_statements RP

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    L_NOT    shift, and go to state 53
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP                      go to state 54
    IDEXP0                     go to state 23
    function_call_2            go to state 55
    bool_returning_statements  go to state 63
    bool_returning_statement   go to state 57
    expression                 go to state 58
    term_prime                 go to state 59
    term                       go to state 60
    factor                     go to state 61
    factor_prime               go to state 62


State 30

   13 K_FOR_EXP: K_FOR LP . assign_statements SEMI bool_returning_statements SEMI assign_statements RP

    ID  shift, and go to state 45

    $default  reduce using rule 66 (epsilon)

    IDEXP              go to state 22
    IDEXP0             go to state 23
    assign_statements  go to state 64
    assign_statement   go to state 65
    epsilon            go to state 66


State 31

    6 statement: K_BEGIN statements . K_END

    K_END  shift, and go to state 67


State 32

    8 statement: ID DOT . function_call_1

    K_IS_RUNNING            shift, and go to state 68
    K_GET_CLOCK_SPEED       shift, and go to state 69
    K_GET_AVAILABLE_MEMORY  shift, and go to state 70
    K_GET_MEMORY            shift, and go to state 71
    K_PRINT_STATS           shift, and go to state 72

    function_call_1  go to state 73


State 33

   38 function_call_2: K_PRINT LP . expression RP

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP            go to state 54
    IDEXP0           go to state 23
    function_call_2  go to state 55
    expression       go to state 74
    term_prime       go to state 59
    term             go to state 60
    factor           go to state 61
    factor_prime     go to state 62


State 34

   39 function_call_2: K_INPUT LP . ID RP

    ID  shift, and go to state 75


State 35

    0 $accept: statements $end .

    $default  accept


State 36

    1 statements: statement statements .

    $default  reduce using rule 1 (statements)


State 37

   14 BLOCK_BODY: LB . statements RB

    K_IF         shift, and go to state 1
    K_WHILE      shift, and go to state 2
    K_FOR        shift, and go to state 3
    K_BEGIN      shift, and go to state 4
    K_PROCESSOR  shift, and go to state 5
    K_LINK       shift, and go to state 6
    K_MEMORY     shift, and go to state 7
    K_JOB        shift, and go to state 8
    K_CLUSTER    shift, and go to state 9
    ID           shift, and go to state 10
    K_SCHEDULER  shift, and go to state 11
    K_INT        shift, and go to state 12
    K_BOOL       shift, and go to state 13
    K_FLOAT      shift, and go to state 14
    K_PRINT      shift, and go to state 15
    K_INPUT      shift, and go to state 16

    $default  reduce using rule 66 (epsilon)

    statements        go to state 76
    statement         go to state 18
    K_WHILE_EXP       go to state 19
    K_IF_EXP          go to state 20
    K_FOR_EXP         go to state 21
    IDEXP             go to state 22
    IDEXP0            go to state 23
    DType             go to state 24
    function_call_2   go to state 25
    assign_statement  go to state 26
    epsilon           go to state 27


State 38

    5 statement: K_WHILE_EXP BLOCK_BODY .

    $default  reduce using rule 5 (statement)


State 39

    4 statement: K_IF_EXP BLOCK_BODY . K_ELSE BLOCK_BODY

    K_ELSE  shift, and go to state 77


State 40

    7 statement: K_FOR_EXP BLOCK_BODY .

    $default  reduce using rule 7 (statement)


State 41

   48 assign_statement: IDEXP ASSIGN . expression

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP            go to state 54
    IDEXP0           go to state 23
    function_call_2  go to state 55
    expression       go to state 78
    term_prime       go to state 59
    term             go to state 60
    factor           go to state 61
    factor_prime     go to state 62


State 42

   22 DIM1: LS . INT RS
   23     | LS . ID RS

    ID   shift, and go to state 79
    INT  shift, and go to state 80


State 43

   18 IDEXP: IDEXP0 BR_DIMLIST .

    $default  reduce using rule 18 (IDEXP)


State 44

   20 BR_DIMLIST: DIM1 .
   21           | DIM1 . BR_DIMLIST

    LS  shift, and go to state 42

    $default  reduce using rule 20 (BR_DIMLIST)

    BR_DIMLIST  go to state 81
    DIM1        go to state 44


State 45

   19 IDEXP0: ID .

    $default  reduce using rule 19 (IDEXP0)


State 46

   10 statement: DType DList .

    $default  reduce using rule 10 (statement)


State 47

   15 DList: IDEXP . COMMA DList
   16      | IDEXP .

    COMMA  shift, and go to state 82

    $default  reduce using rule 16 (DList)


State 48

   19 IDEXP0: ID .
   59 factor_prime: ID . DOT function_call_1

    DOT  shift, and go to state 83

    $default  reduce using rule 19 (IDEXP0)


State 49

   61 factor_prime: INT .

    $default  reduce using rule 61 (factor_prime)


State 50

   62 factor_prime: FLOAT .

    $default  reduce using rule 62 (factor_prime)


State 51

   60 factor_prime: LP . expression RP

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP            go to state 54
    IDEXP0           go to state 23
    function_call_2  go to state 55
    expression       go to state 84
    term_prime       go to state 59
    term             go to state 60
    factor           go to state 61
    factor_prime     go to state 62


State 52

   63 factor_prime: STRING .

    $default  reduce using rule 63 (factor_prime)


State 53

   42 bool_returning_statements: L_NOT . bool_returning_statements

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    L_NOT    shift, and go to state 53
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP                      go to state 54
    IDEXP0                     go to state 23
    function_call_2            go to state 55
    bool_returning_statements  go to state 85
    bool_returning_statement   go to state 57
    expression                 go to state 58
    term_prime                 go to state 59
    term                       go to state 60
    factor                     go to state 61
    factor_prime               go to state 62


State 54

   65 factor_prime: IDEXP .

    $default  reduce using rule 65 (factor_prime)


State 55

   64 factor_prime: function_call_2 .

    $default  reduce using rule 64 (factor_prime)


State 56

   12 K_IF_EXP: K_IF LP bool_returning_statements . RP

    RP  shift, and go to state 86


State 57

   40 bool_returning_statements: bool_returning_statement . L_AND bool_returning_statements
   41                          | bool_returning_statement . L_OR bool_returning_statements
   43                          | bool_returning_statement .

    L_AND  shift, and go to state 87
    L_OR   shift, and go to state 88

    $default  reduce using rule 43 (bool_returning_statements)


State 58

   44 bool_returning_statement: expression .

    $default  reduce using rule 44 (bool_returning_statement)


State 59

   49 expression: term_prime . RELOPEXP expression
   50           | term_prime .

    RELOP  shift, and go to state 89

    $default  reduce using rule 50 (expression)

    RELOPEXP  go to state 90


State 60

   52 term_prime: term . PLUS term_prime
   53           | term . MINUS term_prime
   54           | term .

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92

    $default  reduce using rule 54 (term_prime)


State 61

   55 term: factor . MULT term
   56     | factor . DIV term
   57     | factor .

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94

    $default  reduce using rule 57 (term)


State 62

   58 factor: factor_prime .

    $default  reduce using rule 58 (factor)


State 63

   11 K_WHILE_EXP: K_WHILE LP bool_returning_statements . RP

    RP  shift, and go to state 95


State 64

   13 K_FOR_EXP: K_FOR LP assign_statements . SEMI bool_returning_statements SEMI assign_statements RP

    SEMI  shift, and go to state 96


State 65

   45 assign_statements: assign_statement . COMMA assign_statements
   46                  | assign_statement .

    COMMA  shift, and go to state 97

    $default  reduce using rule 46 (assign_statements)


State 66

   47 assign_statements: epsilon .

    $default  reduce using rule 47 (assign_statements)


State 67

    6 statement: K_BEGIN statements K_END .

    $default  reduce using rule 6 (statement)


State 68

   33 function_call_1: K_IS_RUNNING . LP RP

    LP  shift, and go to state 98


State 69

   34 function_call_1: K_GET_CLOCK_SPEED . LP RP

    LP  shift, and go to state 99


State 70

   35 function_call_1: K_GET_AVAILABLE_MEMORY . LP RP

    LP  shift, and go to state 100


State 71

   36 function_call_1: K_GET_MEMORY . LP RP

    LP  shift, and go to state 101


State 72

   37 function_call_1: K_PRINT_STATS . LP RP

    LP  shift, and go to state 102


State 73

    8 statement: ID DOT function_call_1 .

    $default  reduce using rule 8 (statement)


State 74

   38 function_call_2: K_PRINT LP expression . RP

    RP  shift, and go to state 103


State 75

   39 function_call_2: K_INPUT LP ID . RP

    RP  shift, and go to state 104


State 76

   14 BLOCK_BODY: LB statements . RB

    RB  shift, and go to state 105


State 77

    4 statement: K_IF_EXP BLOCK_BODY K_ELSE . BLOCK_BODY

    LB  shift, and go to state 37

    BLOCK_BODY  go to state 106


State 78

   48 assign_statement: IDEXP ASSIGN expression .

    $default  reduce using rule 48 (assign_statement)


State 79

   23 DIM1: LS ID . RS

    RS  shift, and go to state 107


State 80

   22 DIM1: LS INT . RS

    RS  shift, and go to state 108


State 81

   21 BR_DIMLIST: DIM1 BR_DIMLIST .

    $default  reduce using rule 21 (BR_DIMLIST)


State 82

   15 DList: IDEXP COMMA . DList

    ID  shift, and go to state 45

    DList   go to state 109
    IDEXP   go to state 47
    IDEXP0  go to state 23


State 83

   59 factor_prime: ID DOT . function_call_1

    K_IS_RUNNING            shift, and go to state 68
    K_GET_CLOCK_SPEED       shift, and go to state 69
    K_GET_AVAILABLE_MEMORY  shift, and go to state 70
    K_GET_MEMORY            shift, and go to state 71
    K_PRINT_STATS           shift, and go to state 72

    function_call_1  go to state 110


State 84

   60 factor_prime: LP expression . RP

    RP  shift, and go to state 111


State 85

   42 bool_returning_statements: L_NOT bool_returning_statements .

    $default  reduce using rule 42 (bool_returning_statements)


State 86

   12 K_IF_EXP: K_IF LP bool_returning_statements RP .

    $default  reduce using rule 12 (K_IF_EXP)


State 87

   40 bool_returning_statements: bool_returning_statement L_AND . bool_returning_statements

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    L_NOT    shift, and go to state 53
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP                      go to state 54
    IDEXP0                     go to state 23
    function_call_2            go to state 55
    bool_returning_statements  go to state 112
    bool_returning_statement   go to state 57
    expression                 go to state 58
    term_prime                 go to state 59
    term                       go to state 60
    factor                     go to state 61
    factor_prime               go to state 62


State 88

   41 bool_returning_statements: bool_returning_statement L_OR . bool_returning_statements

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    L_NOT    shift, and go to state 53
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP                      go to state 54
    IDEXP0                     go to state 23
    function_call_2            go to state 55
    bool_returning_statements  go to state 113
    bool_returning_statement   go to state 57
    expression                 go to state 58
    term_prime                 go to state 59
    term                       go to state 60
    factor                     go to state 61
    factor_prime               go to state 62


State 89

   51 RELOPEXP: RELOP .

    $default  reduce using rule 51 (RELOPEXP)


State 90

   49 expression: term_prime RELOPEXP . expression

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP            go to state 54
    IDEXP0           go to state 23
    function_call_2  go to state 55
    expression       go to state 114
    term_prime       go to state 59
    term             go to state 60
    factor           go to state 61
    factor_prime     go to state 62


State 91

   52 term_prime: term PLUS . term_prime

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP            go to state 54
    IDEXP0           go to state 23
    function_call_2  go to state 55
    term_prime       go to state 115
    term             go to state 60
    factor           go to state 61
    factor_prime     go to state 62


State 92

   53 term_prime: term MINUS . term_prime

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP            go to state 54
    IDEXP0           go to state 23
    function_call_2  go to state 55
    term_prime       go to state 116
    term             go to state 60
    factor           go to state 61
    factor_prime     go to state 62


State 93

   55 term: factor MULT . term

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP            go to state 54
    IDEXP0           go to state 23
    function_call_2  go to state 55
    term             go to state 117
    factor           go to state 61
    factor_prime     go to state 62


State 94

   56 term: factor DIV . term

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP            go to state 54
    IDEXP0           go to state 23
    function_call_2  go to state 55
    term             go to state 118
    factor           go to state 61
    factor_prime     go to state 62


State 95

   11 K_WHILE_EXP: K_WHILE LP bool_returning_statements RP .

    $default  reduce using rule 11 (K_WHILE_EXP)


State 96

   13 K_FOR_EXP: K_FOR LP assign_statements SEMI . bool_returning_statements SEMI assign_statements RP

    ID       shift, and go to state 48
    INT      shift, and go to state 49
    FLOAT    shift, and go to state 50
    LP       shift, and go to state 51
    STRING   shift, and go to state 52
    L_NOT    shift, and go to state 53
    K_PRINT  shift, and go to state 15
    K_INPUT  shift, and go to state 16

    IDEXP                      go to state 54
    IDEXP0                     go to state 23
    function_call_2            go to state 55
    bool_returning_statements  go to state 119
    bool_returning_statement   go to state 57
    expression                 go to state 58
    term_prime                 go to state 59
    term                       go to state 60
    factor                     go to state 61
    factor_prime               go to state 62


State 97

   45 assign_statements: assign_statement COMMA . assign_statements

    ID  shift, and go to state 45

    $default  reduce using rule 66 (epsilon)

    IDEXP              go to state 22
    IDEXP0             go to state 23
    assign_statements  go to state 120
    assign_statement   go to state 65
    epsilon            go to state 66


State 98

   33 function_call_1: K_IS_RUNNING LP . RP

    RP  shift, and go to state 121


State 99

   34 function_call_1: K_GET_CLOCK_SPEED LP . RP

    RP  shift, and go to state 122


State 100

   35 function_call_1: K_GET_AVAILABLE_MEMORY LP . RP

    RP  shift, and go to state 123


State 101

   36 function_call_1: K_GET_MEMORY LP . RP

    RP  shift, and go to state 124


State 102

   37 function_call_1: K_PRINT_STATS LP . RP

    RP  shift, and go to state 125


State 103

   38 function_call_2: K_PRINT LP expression RP .

    $default  reduce using rule 38 (function_call_2)


State 104

   39 function_call_2: K_INPUT LP ID RP .

    $default  reduce using rule 39 (function_call_2)


State 105

   14 BLOCK_BODY: LB statements RB .

    $default  reduce using rule 14 (BLOCK_BODY)


State 106

    4 statement: K_IF_EXP BLOCK_BODY K_ELSE BLOCK_BODY .

    $default  reduce using rule 4 (statement)


State 107

   23 DIM1: LS ID RS .

    $default  reduce using rule 23 (DIM1)


State 108

   22 DIM1: LS INT RS .

    $default  reduce using rule 22 (DIM1)


State 109

   15 DList: IDEXP COMMA DList .

    $default  reduce using rule 15 (DList)


State 110

   59 factor_prime: ID DOT function_call_1 .

    $default  reduce using rule 59 (factor_prime)


State 111

   60 factor_prime: LP expression RP .

    $default  reduce using rule 60 (factor_prime)


State 112

   40 bool_returning_statements: bool_returning_statement L_AND bool_returning_statements .

    $default  reduce using rule 40 (bool_returning_statements)


State 113

   41 bool_returning_statements: bool_returning_statement L_OR bool_returning_statements .

    $default  reduce using rule 41 (bool_returning_statements)


State 114

   49 expression: term_prime RELOPEXP expression .

    $default  reduce using rule 49 (expression)


State 115

   52 term_prime: term PLUS term_prime .

    $default  reduce using rule 52 (term_prime)


State 116

   53 term_prime: term MINUS term_prime .

    $default  reduce using rule 53 (term_prime)


State 117

   55 term: factor MULT term .

    $default  reduce using rule 55 (term)


State 118

   56 term: factor DIV term .

    $default  reduce using rule 56 (term)


State 119

   13 K_FOR_EXP: K_FOR LP assign_statements SEMI bool_returning_statements . SEMI assign_statements RP

    SEMI  shift, and go to state 126


State 120

   45 assign_statements: assign_statement COMMA assign_statements .

    $default  reduce using rule 45 (assign_statements)


State 121

   33 function_call_1: K_IS_RUNNING LP RP .

    $default  reduce using rule 33 (function_call_1)


State 122

   34 function_call_1: K_GET_CLOCK_SPEED LP RP .

    $default  reduce using rule 34 (function_call_1)


State 123

   35 function_call_1: K_GET_AVAILABLE_MEMORY LP RP .

    $default  reduce using rule 35 (function_call_1)


State 124

   36 function_call_1: K_GET_MEMORY LP RP .

    $default  reduce using rule 36 (function_call_1)


State 125

   37 function_call_1: K_PRINT_STATS LP RP .

    $default  reduce using rule 37 (function_call_1)


State 126

   13 K_FOR_EXP: K_FOR LP assign_statements SEMI bool_returning_statements SEMI . assign_statements RP

    ID  shift, and go to state 45

    $default  reduce using rule 66 (epsilon)

    IDEXP              go to state 22
    IDEXP0             go to state 23
    assign_statements  go to state 127
    assign_statement   go to state 65
    epsilon            go to state 66


State 127

   13 K_FOR_EXP: K_FOR LP assign_statements SEMI bool_returning_statements SEMI assign_statements . RP

    RP  shift, and go to state 128


State 128

   13 K_FOR_EXP: K_FOR LP assign_statements SEMI bool_returning_statements SEMI assign_statements RP .

    $default  reduce using rule 13 (K_FOR_EXP)
